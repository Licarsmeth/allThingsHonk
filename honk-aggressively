#!/bin/bash
usage(){
    cat >&2
    exit 1
}<<\EOF
honk-aggressively _port_ [attached-file]
the text is read from stdin.
hostname is https://bikalpa$port.ashwink.com.np
EOF

die(){
    printf "%s\n" "$@" >&2
    exit 1
}
login(){
    "${curl[@]}" -d "username=$uname" -d "password=$pw" "$domain/dologin" > "$tmpfile" || die "couldn't login"
}
get_csrf(){
    "${curl[@]}" "$domain/" > "$tmpfile" || die "couldn't connect"
    csrf=$(awk  -F'"' 'BEGIN{ e = 1 } /csrftoken =/{ print $2; e = 0} END { exit e }' "$tmpfile")
}

if (( $# < 1 )); then
    usage
fi

case $# in
    2)
	file=$2
	port=$1
	;;
    1)
	port=$1
	;;
esac

uname=bikalpa$port
shift
pw=$uname
domain="https://$uname.ashwink.com.np"
cookie="honk-$uname.txt"
tmpfile="/tmp/honking.$$.html"
trap 'rm "$tmpfile"' EXIT
curl=(curl -sf -b "$cookie" -c "$cookie")

if ! [[ -f "$cookie" ]]; then
    login
fi

if ! get_csrf; then
    echo "trying to login" >&2
    login
    get_csrf
fi

if [[ $file ]]; then
    curl=("${curl[@]}" -F "donk=@$file")
fi

printf '%s\n' 'honk:' >&2
"${curl[@]}" -iF "CSRF=$csrf" -F "noise=<-" "$domain/honk" > "$tmpfile"
status=$?

if head -n1 "$tmpfile" | grep -qF 'HTTP/1.1 303 See Other'; then
    awk -v"host=$domain" '/Location:/{printf "%s%s\n", host, $2}' "$tmpfile"
else
    status=1
fi

exit "$status"
