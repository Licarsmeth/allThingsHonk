#!/bin/bash
usage(){
    cat >&2
    exit 1
}<<\EOF
honk-aggressively port action
the text is read from stdin.
hostname is https://bikalpa$port.ashwink.com.np
EOF

die(){
    printf "%s\n" "$@" >&2
    exit 1
}

login(){
    "${curl[@]}" -d "username=$uname" -d "password=$pw" "$domain/dologin" > "$tmpfile" || die "couldn't login"
}

get_csrf(){
    login
    "${curl[@]}" -i "$domain$1" > "$tmpfile" || die "couldn't connect"
    csrf=$(
	awk  -F'"' 'BEGIN{e=1}
/<input type="hidden" name="CSRF"/{ print $6; e=0; exit}
END { exit e }' "$tmpfile"
	) || die "couldn't get csrf token"
    curl=("${curl[@]}" -F "CSRF=$csrf")
}

lorem(){
    chars=$(( RANDOM % 1000 ))
    LC_ALL=C grep -"m$chars" -aEo '[[:alnum:]]' /dev/urandom | tr -d '\n' | paste -s
}

subscribe() {
    get_csrf "/honkers"
    for i; do
	[[ i == $port ]] && continue
	honker=bikalpa$i
	url="https://$honker.ashwink.com.np/u/$honker"
	"${curl[@]}" -iF "url=$url" "$domain/submithonker"
    done
}

bark(){
    get_csrf
    lorem | "${curl[@]}" -iF "noise=<-" "$domain/honk"> "$tmpfile"
    status=$?

    if head -n1 "$tmpfile" | grep -qF 'HTTP/1.1 303 See Other'; then
	awk -v"host=$domain" '/Location:/{printf "%s%s\n", host, $2}' "$tmpfile"
    else
	status=1
    fi

    exit "$status"
}

if (( $# < 1 )); then
    usage
fi

port=$1
shift
. ~/allthingshonk/honk-manage.conf
uname=bikalpa$port
pw=$uname
domain="https://$uname.ashwink.com.np"
cookie="$rundir/honk-$uname.txt"

tmpfile="/tmp/honking.$$.html"
trap 'rm "$tmpfile"' EXIT
curl=(curl -f -b "$cookie" -c "$cookie")

case $1 in
    bark|'')
	bark
	;;
    subscribe)
	subscribe "$@"
	;;
esac
