#!/bin/bash

#up, down, random, specific

usage(){
    echo "$@" >&2
    echo "honk-init port service" >&2
    exit 1
}

init(){
    mkdir -p "$datadir" || exit 1
    cd "$datadir" || exit 1

    uname="bikalpa$port"
    pw="$uname"
    listen="127.0.0.1:$port"
    domain="bikalpa$port.ashwink.com.np"

    printf "%s\n" "$uname" "$pw" "$listen" "$domain" |
	honk init || exit 1
    up
    cd ../
    for i in */; do
	pp="${i%/}"
	[[ $pp == $port ]] && continue
	./honk-aggressively "$port" subscribe "$pp"
    done
}

up(){
    honk --viewdir="$viewdir" &
}

down() {
    kill -SIGINT "$honkPid"
}

forceDown() {
    kill -SIGKILL "$honkPid"
}

specific(){
    time=$1
    down
    sleep "$time"
    up
}

random(){
   rand=$((1 + RANDOM % 10))
   specific $rand
}

set -x

if (( $# < 2 )); then
    usage "not enough args"
fi

# shopt -s extglob
case $1 in
    [0-9][0-9][0-9][0-9])
	port=$1
	shift
    ;;
    *)
	usage "arg must be all digits"
	;;
esac

datadir="$HOME/honk/$port"
viewdir="$HOME/honk-0.9.8"

if ! [[ -d "$datadir" ]]; then
	init
fi

cd "$datadir" || exit 1
honkPid="$(lsof -i "@0.0.0.0:$port" | awk 'NR==2 {print $2}')"

task=$1
shift

case $task in
    up)
        up
        ;;
    down)
        down
        ;;
    forceDown)
	forceDown
	;;
    specific)
	specific "$@"
	;;
    random)
	random
	;;
    bark)
	honk_post
	;;
    *)
        echo "Invalid option.Try up, down or forceDown"
        ;;
esac

