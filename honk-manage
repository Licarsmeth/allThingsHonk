#!/bin/bash

#up, down, random, specific

usage(){
    printf '%s\n' "$*" >&2
    cat >&2
    exit 1
}<<\EOF
honk-manage _port_ up|down|random|(sleep _time_)|(subscribe-all totalServers)
random sleeps for RANDOM % (60*60) time
EOF

init(){
    mkdir -p "$datadir" || exit 1

    uname="$machine$port"
    pw="$uname"
    listen="127.0.0.1:$port"
    domain="$port.$machine.ashwink.com.np"

    (
	cd "$datadir" || die "couldn't cd to $datadir"
	printf "%s\n" "$uname" "$pw" "$listen" "$domain" |
	    honk init || exit 1
    )
    up
}

up(){
    (
	cd "$datadir" || die "couldn't cd to $datadir"
	honk --viewdir="$viewdir" &
    )
}

down() {
    kill -SIGINT "$honkPid"
}

forceDown() {
    kill -SIGKILL "$honkPid"
}

timed_sleep(){
    time=$1
    down
    sleep "$time"
    up
}

random_sleep(){
   rand=$((1 + RANDOM % (60*60)))
   timed_sleep "$rand"
}

subscribe_all(){
    total=$1
    for m in "${allmachines[@]}"; do
	for ((i=0; i<"$total"; i++)); do
	    pp=$((5000+i))
	    honk-subscribe "$port.$machine.ashwink.com.np" "$machine$port" "https://$pp.$m.ashwink.com.np/u/$m$pp"
	done
    done
}

set -x

if (( $# < 2 )) && [[ $1 != "purge-all" ]]; then
    usage "not enough args"
fi

# shopt -s extglob
case $1 in
    [0-9][0-9][0-9][0-9])
	port=$1
	shift
    ;;
    purge-all)
	pkill --exact honk
	cd ~/honk/ || die "couldn't cd"
	rm -rf ./*
	exit
	;;
    *)
	usage "arg must be all digits"
	;;
esac


. ~/allthingshonk/honk-manage.conf
datadir="$datadir/$port"
task=$1
shift

if [[ $task != "init" ]] && ! [[ -d "$datadir" ]]; then
    die "$datadir hasn't been inited"
elif [[ $task = "init" ]]; then
    init
    exit
fi

[[ -d "$datadir" ]] || die "couldn't find $datadir"

honkPid="$(lsof -i "@0.0.0.0:$port" | awk 'NR==2 {print $2}')"

case $task in
    up)
        up
        ;;
    down)
        down
        ;;
    forceDown)
	forceDown
	;;
    sleep)
	[[ $1 ]] || usage "sleep _sleep time_"
	timed_sleep "$@"
	;;
    random)
	random_sleep
	;;
    purge)
	down
	cd "$HOME" || exit 1
	rm -r "$datadir"
	;;
    subscribe-all)
	[[ $1 ]] || usage "subscribe-all _totalServers_"
	subscribe_all "$@"
	exit 1
	;;
    *)
        die "Invalid option.Try up, down or forceDown"
        ;;
esac
